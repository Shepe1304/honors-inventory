import React, { useRef } from "react";
import { jsPDF } from "jspdf";
import autoTable from "jspdf-autotable";
import type { Equipment } from "../../types";
import honorsLogo from "../../assets/honorsLogoBase64"; // base64 logo string

interface InvoicePreviewProps {
  equipment: Equipment[];
}

export const InvoicePreview: React.FC<InvoicePreviewProps> = ({
  equipment,
}) => {
  const tableRef = useRef<HTMLTableElement>(null);

  const getBuildingStats = () => {
    const stats: Record<string, number> = {};
    equipment.forEach((item) => {
      stats[item.buildingType] = (stats[item.buildingType] || 0) + 1;
    });
    return stats;
  };

  const handleDownloadPDF = () => {
    const doc = new jsPDF();
    const stats = getBuildingStats();

    // Add Honors logo
    doc.addImage(honorsLogo, "PNG", 14, 10, 20, 20);

    // Title
    doc.setFont("helvetica", "bold");
    doc.setFontSize(20);
    doc.setTextColor("#006747");
    doc.text("Honors Inventory (Simplified) Invoice", 38, 22);

    // Summary Stats
    doc.setFontSize(12);
    doc.setTextColor("#000");
    doc.setFont("helvetica", "normal");
    let statY = 40;
    // doc.setFont("helvetica", "bold");
    doc.text(`Total Equipment: ${equipment.length}`, 14, statY);
    // doc.setFont("helvetica", "normal");
    Object.entries(stats).forEach(([building, count]) => {
      statY += 6;
      doc.text(`• ${building}: ${count} item(s)`, 20, statY);
    });

    // Table
    autoTable(doc, {
      head: [["#", "Model", "Type", "Room", "Building", "Created At"]],
      body: equipment.map((item, i) => [
        i + 1,
        item.model,
        item.equipmentType,
        item.locationName,
        item.buildingType,
        new Date(item.createdAt).toLocaleDateString(),
      ]),
      startY: statY + 10,
      styles: {
        font: "helvetica",
        fontStyle: "normal",
        fontSize: 10,
        textColor: "#333",
        halign: "left",
        valign: "middle",
      },
      headStyles: {
        fillColor: "#006747",
        textColor: "#fff",
        fontSize: 11,
        fontStyle: "bold",
      },
      alternateRowStyles: {
        fillColor: "#f6f6f6",
      },
      theme: "striped",
    });

    // Footer
    doc.setFontSize(10);
    doc.setTextColor("#666");
    doc.setFont("helvetica", "normal");
    doc.text(
      "Generated by Honors Inventory (Simplified) System",
      14,
      doc.internal.pageSize.height - 10
    );

    doc.save("honors-inventory-invoice.pdf");
  };

  const buildingStats = getBuildingStats();

  return (
    <div className="max-w-4xl mx-auto bg-white p-8 rounded-lg shadow-md">
      <div className="flex justify-between items-center mb-6">
        <div>
          <h2 className="text-2xl font-bold text-usf-green">Invoice Preview</h2>
          <p className="text-sm text-gray-600">
            Honors College – University of South Florida
          </p>
          <p className="text-sm text-gray-700 mt-1">
            Total Items: <strong>{equipment.length}</strong>
          </p>
          <ul className="text-sm text-gray-600 list-disc ml-5">
            {Object.entries(buildingStats).map(([type, count]) => (
              <li key={type}>
                {type}: {count} item{count !== 1 ? "s" : ""}
              </li>
            ))}
          </ul>
        </div>
        <button
          onClick={handleDownloadPDF}
          className="bg-usf-green hover:bg-usf-green-dark text-white font-medium py-2 px-4 rounded-lg transition duration-200"
        >
          Download PDF
        </button>
      </div>

      <div className="overflow-x-auto">
        <table
          ref={tableRef}
          className="min-w-full text-sm text-left border border-gray-300"
        >
          <thead className="bg-usf-green text-white">
            <tr>
              <th className="px-4 py-2">#</th>
              <th className="px-4 py-2">Model</th>
              <th className="px-4 py-2">Type</th>
              <th className="px-4 py-2">Room</th>
              <th className="px-4 py-2">Building</th>
              <th className="px-4 py-2">Created At</th>
            </tr>
          </thead>
          <tbody>
            {equipment.map((item, index) => (
              <tr
                key={item.id}
                className={index % 2 === 0 ? "bg-white" : "bg-gray-50"}
              >
                <td className="px-4 py-2 border-t">{index + 1}</td>
                <td className="px-4 py-2 border-t">{item.model}</td>
                <td className="px-4 py-2 border-t">{item.equipmentType}</td>
                <td className="px-4 py-2 border-t">{item.locationName}</td>
                <td className="px-4 py-2 border-t">{item.buildingType}</td>
                <td className="px-4 py-2 border-t">
                  {new Date(item.createdAt).toLocaleDateString()}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
};
